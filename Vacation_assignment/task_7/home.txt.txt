import 'print.dart';
import 'package:flutter/material.dart';

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  State<MyApp> createState() => _HomeState();
}

class _HomeState extends State<MyApp> {
  // TextFields
  TextEditingController _name = TextEditingController();
  TextEditingController _email = TextEditingController();
  TextEditingController _number = TextEditingController();

  String? gender;
  DateTime date = DateTime(1920, 01, 01);
  double sliderValue = 1;
  double age = 1;
  String _selectedTime = 'Select';
  bool _switch = false;
  String SwitchValue = "Not Send Mail";
  bool _isremember = false;
  String remember = "";
  bool? _hobby1 = false;
  String hobby1 = "";

  bool? _hobby2 = false;
  String hobby2 = "";

  @override
  Widget build(BuildContext context) {
    Future<void> _openTimePicker(BuildContext context) async {
      final TimeOfDay? t = await showTimePicker(
        context: context,
        initialTime: TimeOfDay.now(),
      );

      if (t != null) {
        setState(() {
          _selectedTime = t.format(context);
        });
      }
    }

    final size = MediaQuery.of(context).size;
    final width = size.width;
    final height = size.height;

    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xFF0D47A1),
        title: Text(
          "Form",
          style: TextStyle(color: Color.fromARGB(255, 248, 248, 248)),
        ),
        centerTitle: true,
      ),
      body: Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
            colors: [Color(0xFF64B5F6), Color(0xFFBBDEFB)],
          ),
        ),
        child: SafeArea(
          child: Container(
            padding: EdgeInsets.all(30),
            child: ListView(
              children: [
                SizedBox(
                  height: height * 0.05,
                ),

                Text(
                  'Form',
                  style: TextStyle(
                      color: Color.fromARGB(255, 8, 59, 100),
                      fontSize: 30,
                      fontWeight: FontWeight.bold),
                ),

                SizedBox(
                  height: height * 0.04,
                ),

                TextField(
                  controller: _name,
                  decoration: InputDecoration(
                    prefixIcon: Icon(Icons.drive_file_rename_outline),
                    labelText: 'Name',
                    border: OutlineInputBorder(),
                  ),
                ),

                SizedBox(
                  height: height * 0.02,
                ),

                TextField(
                  controller: _email,
                  decoration: InputDecoration(
                    prefixIcon: Icon(Icons.email_outlined),
                    labelText: 'Email',
                    border: OutlineInputBorder(),
                  ),
                ),

                SizedBox(
                  height: height * 0.02,
                ),

                TextField(
                  controller: _number,
                  decoration: InputDecoration(
                    prefixIcon: Icon(Icons.phone_outlined),
                    labelText: 'Phone',
                    border: OutlineInputBorder(),
                  ),
                ),

                SizedBox(
                  height: height * 0.02,
                ),

                Text(
                  'Gender: ',
                  style: TextStyle(fontSize: 18),
                ),

                RadioListTile(
                  value: 'male',
                  groupValue: gender,
                  title: Text('male'),
                  onChanged: (value) {
                    setState(() {
                      gender = value.toString();
                    });
                  },
                ),

                RadioListTile(
                  value: 'female',
                  groupValue: gender,
                  title: Text('female'),
                  onChanged: (value) {
                    setState(() {
                      gender = value.toString();
                    });
                  },
                ),

                Row(
                  children: [
                    Text(
                      'Age: ',
                      style: TextStyle(fontSize: 18),
                    ),
                    Expanded(
                      child: Slider(
                        min: 1,
                        divisions: 100,
                        max: 100,
                        value: age,
                        label: '${age.toInt()}',
                        onChanged: (value) {
                          setState(() {
                            age = value;
                          });
                        },
                      ),
                    ),
                  ],
                ),

                Row(
                  children: [
                    Text(
                      'DOB: ',
                      style: TextStyle(fontSize: 18),
                    ),
                    SizedBox(
                      width: width * 0.03,
                    ),
                    ElevatedButton(
                      onPressed: () async {
                        DateTime? newDate = await showDatePicker(
                          context: context,
                          initialDate: date,
                          firstDate: DateTime(1800),
                          lastDate: DateTime(2022),
                        );

                        if (newDate == null) return;
                        setState(() {
                          date = newDate;
                        });
                      },
                      child: Text('${date.year}/${date.month}/${date.day}'),
                    ),
                  ],
                ),

                // SELECT TIME PICKER
                Column(
                  children: [
                    Text(
                      'Time: ',
                      style: TextStyle(fontSize: 18),
                    ),
                    SizedBox(
                      width: width * 0.02,
                    ),
                    ElevatedButton(
                      child: Text(
                        _selectedTime,
                        style: TextStyle(color: Colors.white),
                      ),
                      onPressed: () {
                        _openTimePicker(context);
                      },
                    ),
                  ],
                ),

                Row(
                  children: [
                    Text(
                      'Hobby: ',
                      style: TextStyle(fontSize: 18),
                    ),
                    Checkbox(
                      value: _hobby1,
                      onChanged: (value) {
                        setState(() {
                          _hobby1 = value;
                          if (_hobby1 == true) {
                            setState(() {
                              hobby1 = "Music";
                            });
                          }
                        });
                      },
                    ),
                    Text(
                      'Music',
                      style: TextStyle(fontSize: 16),
                    ),
                  ],
                ),

                Row(
                  children: [
                    Checkbox(
                      value: _hobby2,
                      onChanged: (value) {
                        setState(() {
                          _hobby2 = value;
                          if (_hobby2 == true) {
                            setState(() {
                              remember = "Reading";
                            });
                          }
                        });
                      },
                    ),
                    Text(
                      'Reading',
                      style: TextStyle(fontSize: 16),
                    ),
                  ],
                ),
                // Switch
                Row(
                  children: [
                    Switch(
                      value: _switch,
                      onChanged: (value) {
                        setState(() {
                          _switch = value;
                          if (value == true) {
                            setState(() {
                              SwitchValue = "Accept Terms & Conditions";
                            });
                          }
                        });
                      },
                    ),
                    Text('$SwitchValue'),
                  ],
                ),

                Row(
                  children: [
                    Checkbox(
                      value: _isremember,
                      onChanged: (value) {
                        setState(() {
                          _isremember = value!;
                          if (_isremember == true) {
                            setState(() {
                              remember = "Yes";
                            });
                          }
                          if (_isremember == false) {
                            setState(() {
                              remember = "No";
                            });
                          }
                        });
                      },
                    ),
                    Text(
                      'Remember Me',
                      style: TextStyle(fontSize: 16),
                    ),
                  ],
                ),

                Center(
                  child: ElevatedButton(
                    onPressed: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => Print(
                            name: _name.text,
                            email: _email.text,
                            number: _number.text,
                            gender: gender,
                            dob: '${date.year}/${date.month}/${date.day}',
                            age: '${age.toInt()}',
                            time: _selectedTime,
                            send_email: SwitchValue,
                            remember: remember,
                            hobby1: '',
                            hobby2: '',
                          ),
                        ),
                      );

                      print(_selectedTime);
                      print(SwitchValue);
                      print(_hobby1);
                      print(remember);
                    },
                    child: Text('SAVE'),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
